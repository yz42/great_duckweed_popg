#! /bin/bash
# manta.run_all.sbatch

#SBATCH --export=ALL               # Start with a clean environment
#SBATCH --nodes=1                   # the number of nodes you want to reserve
#SBATCH --ntasks-per-node=10        # the number of CPU cores per node
#SBATCH --mem=12G                 # how much memory is needed per node (units can be: K, M, G, T)
#SBATCH --partition=normal          # on which partition to submit the job
#SBATCH --time=48:00:00             # the max wallclock time (time limit your job will run)
#SBATCH --job-name=manta.run_all       # the name of your job
#SBATCH -o /scratch/tmp/ywang1/01.duckweed/popgenomics/SV/manta/run_manta/manta.run_all_%A_%a.out # Standard output
#SBATCH -e /scratch/tmp/ywang1/01.duckweed/popgenomics/SV/manta/run_manta/manta.run_all_%A_%a.err # Standard error

module load palma/2020b  GCCcore/10.2.0 Python/2.7.18

FILES=($(cat RMDP.bam.list))
i=${FILES[$SLURM_ARRAY_TASK_ID]}
j=$(basename $i .bam)
FILENAME=${j%%.*} 

echo "$FILENAME"
echo "$SLURM_ARRAY_TASK_ID"

mkdir -p "/scratch/tmp/ywang1/01.duckweed/popgenomics/SV/manta/run_manta/$FILENAME/"

echo "start cfg ..."
python2 /home/y/ywang1/soft/manta/manta-1.6.0.centos6_x86_64/bin/configManta.py \
--bam $i \
--referenceFasta /scratch/tmp/ywang1/01.duckweed/popgenomics/ref/SP_combined.fasta \
--runDir /scratch/tmp/ywang1/01.duckweed/popgenomics/SV/manta/run_manta/$FILENAME/

echo "start running manta ..."
python2  /scratch/tmp/ywang1/01.duckweed/popgenomics/SV/manta/run_manta/$FILENAME/runWorkflow.py -j 8 -g 10





FILES=($(cat RMDP.bam.list))
# get size of array
NUMFASTQ=${#FILES[@]}
# now subtract 1 as we have to use zero-based indexing (first cell is 0)
ZBNUMFASTQ=$(($NUMFASTQ - 1))
# now submit to SLURM
if [ $ZBNUMFASTQ -ge 0 ]; then
	echo "start with $ZBNUMFASTQ" 
	sbatch --array=0-$ZBNUMFASTQ manta.run_all.sbatch
fi
