#! /bin/bash
# graphtyper.all_chr.sbatch

#SBATCH --export=ALL               # Start with a clean environment
#SBATCH --nodes=1                   # the number of nodes you want to reserve
#SBATCH --ntasks-per-node=50        # the number of CPU cores per node
#SBATCH --mem=128G                 # how much memory is needed per node (units can be: K, M, G, T)
#SBATCH --partition=normal          # on which partition to submit the job
#SBATCH --time=48:00:00             # the max wallclock time (time limit your job will run)
#SBATCH --job-name=graphtyper.all_chr    # the name of your job
#SBATCH -o graphtyper.all_chr_%A_%a.out # Standard output
#SBATCH -e graphtyper.all_chr_%A_%a.err # Standard error

module load palma/2020b  GCCcore/10.2.0 Python/2.7.18

FILES=($(cat chr.list))
REGION=($(cat chr.region))
i=${FILES[$SLURM_ARRAY_TASK_ID]}
j=${REGION[$SLURM_ARRAY_TASK_ID]}
# j=$(basename $i .bam)
# FILENAME=${j%%.*} 

echo "$i"
echo "$SLURM_ARRAY_TASK_ID"

module load  palma/2020b  GCC/10.2.0 

/home/y/ywang1/soft/graphtyper/graphtyper genotype_sv \
/scratch/tmp/ywang1/01.duckweed/popgenomics/ref/SP_combined.fasta \
/scratch/tmp/ywang1/01.duckweed/popgenomics/SV/manta/merge_manta/$i.manta.merge.vcf.gz \
--region=$j \
--sams=/scratch/tmp/ywang1/01.duckweed/popgenomics/SV/RMDP.bam.list \
--avg_cov_by_readlen=/scratch/tmp/ywang1/01.duckweed/popgenomics/SV/manta/graphtyper/RMDP.bam.list.avg_cov_by_readlen \
--output=/scratch/tmp/ywang1/01.duckweed/popgenomics/SV/manta/graphtyper/$i \
--threads=48  --max_files_open=96





FILES=($(cat chr.list))
# get size of array
NUMFASTQ=${#FILES[@]}
# now subtract 1 as we have to use zero-based indexing (first cell is 0)
ZBNUMFASTQ=$(($NUMFASTQ - 1))
# now submit to SLURM
if [ $ZBNUMFASTQ -ge 0 ]; then
    echo "start with $ZBNUMFASTQ" 
    sbatch --array=0-$ZBNUMFASTQ graphtyper.all_chr.sbatch
fi

